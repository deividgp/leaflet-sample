<!DOCTYPE html>
<html>
<head>
  <title>Pràctica 2 SIO</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css" integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ==" crossorigin="" />
  <link rel="stylesheet" href="style.css">
  <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js" integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ==" crossorigin=""></script>
  <script src="functions.js"></script>
</head>
<body>
  <div id="myMap" style="width: 1000px; height: 900px;"></div>
  <script>
    const continents = <%-JSON.stringify(continents)%>;
    const countries = <%-JSON.stringify(countries)%>;
    const capitals = <%-JSON.stringify(capitals)%>;
    const contingutTotal = <%-JSON.stringify(contingutTotal)%>;
    const contingutNetflix = <%-JSON.stringify(contingutNetflix)%>;
    const contingut2021 = <%-JSON.stringify(contingut2021)%>;

    let layerGroup = []

    capitals.forEach(element => {
      if(element[2] && element[3]){
        let marker = L.marker([element[2], element[3]]).bindPopup("<b>Capital</b><br>"+element[1]);
        layerGroup.push(marker);
      }
    });
    let capitalsGroup = L.layerGroup(layerGroup)

    let osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    });

    var map = L.map('myMap', {
      center: [41.1319, 1.2445],
      zoom: 13,
      layers: [osm, capitalsGroup]
    });

    L.geoJSON(continents)
    let continentsGeo = L.geoJSON(continents);
    let continentsSty = L.geoJSON(continents, {style: continentsStyle})

    let info = L.control();

    info.onAdd = function (map) {
      this._div = L.DomUtil.create('div', 'info');
      this.update();
      return this._div;
    };

    info.update = function (props, tipus = null) {

      if(tipus == null){
        this._div.innerHTML = '<h4>País</h4>' +  (props ?
          '<b>' + props.ADMIN + '</b>'
          : 'Hover over a state');

        return;
      }

      let value = getValue(props.ADMIN, tipus)
      this._div.innerHTML = '<h4>País</h4>' +  (props ?
          '<b>' + props.ADMIN + '</b><br /> Valor:' + value
          : 'Hover over a state');
    };

    let countriesGeojson = L.geoJSON(countries, {
        style: countriesStyle,
        onEachFeature: onEachCountryFeature
    })
    
    let countries2Geojson = L.geoJSON(countries, {
        style: countriesStyle2,
        onEachFeature: onEachCountryFeature2
    })

    let countries3Geojson = L.geoJSON(countries, {
        style: countriesStyle3,
        onEachFeature: onEachCountryFeature3
    })

    let countries4Geojson = L.geoJSON(countries, {
        style: countriesStyle4,
        onEachFeature: onEachCountryFeature4
    })

    let legendContinents = L.control({position: 'bottomright'});

    legendContinents.onAdd = function (map) {
        let div = L.DomUtil.create('div', 'info legend'),
            countries = ["asia", "europe", "southAmerica", "oceania", "africa", "northAmerica"];

        for (let i = 0; i < countries.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getContinentColor(countries[i]) + '"></i> ' +
                countries[i] + (countries[i + 1] ? '<br>' : '');
        }
        return div;
    };

    let legend2 = L.control({position: 'bottomright'});

    legend2.onAdd = function (map) {

        var div = L.DomUtil.create('div', 'info legend'),
            grades = [0, 10, 20, 50, 100, 200, 500, 1000],
            labels = [];

        for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
                '<i style="background:' + getColor(grades[i] + 1) + '"></i> ' +
                grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
        }

        return div;
    };
    
    let popup = L.popup();
    
    map.on('click', onMapClick);
    map.on('overlayadd', onOverlayAdd);
    map.on('overlayremove', onOverlayDelete);

    let baseMaps = {
      "OpenStreetMap": osm
    };

    let overlayMaps = {
      "Capitals": capitalsGroup,
      "Continents": continentsSty,
      "Paisos": countriesGeojson,
      "Pellicules totals paisos": countries2Geojson,
      "Pellicules paisos Netflix": countries3Geojson,
      "Pellicles paisos 2021": countries4Geojson,
    };

    let layerControl = L.control.layers(baseMaps, overlayMaps).addTo(map);

    L.control.scale().addTo(map);
  </script>
</body>
</html>